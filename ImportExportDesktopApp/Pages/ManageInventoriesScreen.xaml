<Page x:Class="ImportExportDesktopApp.Pages.ManageInventoriesScreen"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ImportExportDesktopApp.Pages"      
      xmlns:converter="clr-namespace:ImportExportDesktopApp.Converters"
      mc:Ignorable="d" 
      DataContext="{StaticResource ManInventory}"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ManageInventories">

    <Page.Resources>
        <converter:RowIndexConverter x:Key="RowIndex" />
    </Page.Resources>
    <Border Padding="16">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="50" />
                <RowDefinition />
                <RowDefinition Height="35" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <TextBlock
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    FontSize="24"
                    FontWeight="Bold"
                    Foreground="#647094"
                    Text="Date Record" />

            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="116" />
                    <ColumnDefinition Width="116" />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <DatePicker
                    Grid.Column="0"
                    Width="100"
                    Height="50"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    materialDesign:HintAssist.Hint="From Date"
                    Focusable="False"
                    SelectedDate="{Binding FromDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Style="{StaticResource MaterialDesignFloatingHintDatePicker}">
                    <DatePicker.Resources>
                        <Style TargetType="DatePickerTextBox">
                            <Setter Property="IsReadOnly" Value="True" />
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <DatePicker
                    Grid.Column="1"
                    Width="100"
                    Height="50"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    materialDesign:HintAssist.Hint="To Date"
                    Focusable="False"
                    SelectedDate="{Binding ToDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Style="{StaticResource MaterialDesignFloatingHintDatePicker}">
                    <DatePicker.Resources>
                        <Style TargetType="DatePickerTextBox">
                            <Setter Property="IsReadOnly" Value="True" />
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>
                <StackPanel
                    Grid.Column="2"
                    VerticalAlignment="Bottom"
                    Orientation="Horizontal">
                    <Button
                        Width="150"
                        Height="35"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Command="{Binding SearchCommand}"
                        Style="{StaticResource MaterialDesignRaisedDarkButton}"
                        ToolTip="Search by Date Record">
                        Search
                    </Button>
                    <Button
                        Width="35"
                        Height="35"
                        Margin="8,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Command="{Binding CancelSearchCommand}"
                        ToolTip="MaterialDesignFloatingActionMiniButton">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsSearch}" Value="false">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="Close" />
                    </Button>
                </StackPanel>
                <Button
                    Grid.Column="3"
                    Width="35"
                    Height="35"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    materialDesign:ButtonProgressAssist.IsIndeterminate="{Binding IsLoading}"
                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding IsLoading}"
                    materialDesign:ButtonProgressAssist.Value="-1"
                    Command="{Binding RefreshCommand}"
                    Content="{materialDesign:PackIcon Sync}"
                    Style="{StaticResource MaterialDesignFloatingActionButton}" />

            </Grid>
            <Grid Grid.Row="2">
                <materialDesign:Card
                    Margin="0,16,0,16"
                    Padding="16"
                    BorderBrush="Silver"
                    BorderThickness="2"
                    UniformCornerRadius="10">
                    <DataGrid
                        x:Name="transactionGrid"
                        Width="auto"
                        Height="auto"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        materialDesign:DataGridAssist.CellPadding="16 16 16 16"
                        materialDesign:DataGridAssist.ColumnHeaderPadding="16 16 16 16"
                        AlternationCount="{Binding ListInventory.Data.Count}"
                        AutoGenerateColumns="False"
                        Background="White"
                        CanUserAddRows="False"
                        CanUserSortColumns="True"
                        ColumnWidth="*"
                        FontSize="15"
                        HorizontalScrollBarVisibility="Hidden"
                        IsReadOnly="True"
                        ItemsSource="{Binding ListInventory.Data}"
                        SelectedItem="{Binding Path=SelectedInventory}">
                        <DataGrid.Columns>
                            <DataGridTextColumn
                                MaxWidth="60"
                                Binding="{Binding Path=AlternationIndex, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource RowIndex}}"
                                Header="No" />
                            <DataGridTextColumn Binding="{Binding RecordedDate}" Header="Date" />
                            <DataGridTextColumn Binding="{Binding OpeningStock}" Header="Opening Stock(kg)" />
                            <DataGridTextColumn Binding="{Binding TotalImport}" Header="Import(kg)" />
                            <DataGridTextColumn Binding="{Binding TotalExport}" Header="Export(kg)" />
                            <DataGridTextColumn Binding="{Binding ClosingStock}" Header="Closing Stock(kg)" />
                        </DataGrid.Columns>
                        <DataGrid.InputBindings>
                            <MouseBinding
                                Command="{Binding DoubleClickCommand}"
                                CommandParameter="{Binding SelectedInventory}"
                                MouseAction="LeftDoubleClick" />
                        </DataGrid.InputBindings>
                    </DataGrid>
                </materialDesign:Card>
            </Grid>
            <Grid Grid.Row="3">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <TextBlock
                            x:Name="TxtPageInfo"
                            Margin="0,0,16,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Text="{Binding TxtPageInfo, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>

                    <Grid Grid.Column="1" HorizontalAlignment="Right">

                        <Button
                            x:Name="BtnBefore"
                            Width="35"
                            Height="35"
                            HorizontalAlignment="Left"
                            Command="{Binding GetBeforePageCommand}"
                            CommandParameter="{Binding Paging}"
                            ToolTip="MaterialDesignFloatingActionMiniButton">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="NavigateBefore" />
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsFirstPage}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsFirstPage}" Value="False">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>

                    <Grid Grid.Column="2" HorizontalAlignment="Right">
                        <Button
                            x:Name="BtnNext"
                            Width="35"
                            Height="35"
                            HorizontalAlignment="Left"
                            Command="{Binding GetNextPageCommand}"
                            CommandParameter="{Binding Paging}"
                            ToolTip="MaterialDesignFloatingActionMiniButton">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="NavigateNext" />
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMaxPage}" Value="True">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsMaxPage}" Value="False">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Page>
